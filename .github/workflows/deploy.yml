name: Reusable Deployment Workflow

# This workflow is hidden from the Actions tab
on:
  workflow_call:
    inputs:
      tag:
        description: 'The image tag to deploy'
        required: true
        type: string
      baremetal_host:
        description: 'BAREMETAL_HOST IP address (optional, overrides secret)'
        required: false
        type: string
    outputs:
      host_reachable:
        description: 'Whether the baremetal host is reachable'
        value: ${{ jobs.check-baremetal.outputs.host_reachable }}
    secrets:
      BAREMETAL_HOST:
        required: true
      BAREMETAL_USER:
        required: true
      BAREMETAL_SSH_KEY:
        required: true
      BAREMETAL_PORT:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

jobs:
  check-baremetal:
    runs-on: ubuntu-latest
    outputs:
      host_reachable: ${{ steps.check_connectivity.outputs.reachable }}
      host_ip: ${{ steps.get_host_ip.outputs.ip }}
    steps:
      - name: Determine host IP
        id: get_host_ip
        run: |
          if [ -n "${{ inputs.baremetal_host }}" ]; then
            echo "Using provided host IP: ${{ inputs.baremetal_host }}"
            echo "ip=${{ inputs.baremetal_host }}" >> $GITHUB_OUTPUT
          else
            echo "Using default host IP from secrets: ${{ secrets.BAREMETAL_HOST }}"
            echo "ip=${{ secrets.BAREMETAL_HOST }}" >> $GITHUB_OUTPUT
          fi
      
      - name: Check baremetal host connectivity
        id: check_connectivity
        run: |
          HOST_IP="${{ steps.get_host_ip.outputs.ip }}"
          echo "Checking connectivity to baremetal host: ${HOST_IP}"
          if nc -z -w5 ${HOST_IP} ${{ secrets.BAREMETAL_PORT }}; then
            echo "Host is reachable"
            echo "reachable=true" >> $GITHUB_OUTPUT
          else
            echo "Host is not reachable"
            echo "reachable=false" >> $GITHUB_OUTPUT
            echo "::error::Failed to connect to baremetal host at ${HOST_IP}"
            echo "::error::Please check the host IP and try again."
          fi

  deploy:
    needs: check-baremetal
    if: needs.check-baremetal.outputs.host_reachable == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Patch extract_ecr_to_baremetal.sh with tag
        env:
          TAG: ${{ inputs.tag }}
        run: |
          sed -i 's/^IMAGE_TAG=.*/IMAGE_TAG="'$TAG'"/' extract_ecr_to_baremetal.sh
          chmod +x extract_ecr_to_baremetal.sh
          ls -la extract_ecr_to_baremetal.sh

      - name: Copy deployment script to baremetal host
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ inputs.baremetal_host != '' && inputs.baremetal_host || secrets.BAREMETAL_HOST }}
          username: ${{ secrets.BAREMETAL_USER }}
          key: ${{ secrets.BAREMETAL_SSH_KEY }}
          port: ${{ secrets.BAREMETAL_PORT }}
          source: "extract_ecr_to_baremetal.sh"
          target: "~/"
          overwrite: true

      - name: Run deployment script on baremetal host
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ inputs.baremetal_host != '' && inputs.baremetal_host || secrets.BAREMETAL_HOST }}
          username: ${{ secrets.BAREMETAL_USER }}
          key: ${{ secrets.BAREMETAL_SSH_KEY }}
          port: ${{ secrets.BAREMETAL_PORT }}
          script: |
            export AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}"
            export AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}"
            chmod +x ~/extract_ecr_to_baremetal.sh
            sudo -E AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}" AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}" ~/extract_ecr_to_baremetal.sh
